---
- name: "Install Prometheus node_exporter"
  # Requires host facts
  hosts:
    - storage
    - rack19
    - compute
    - rack11
  vars:
    node_exporter_disabled_collectors:
      - arp
      - bcache
      - bonding
      - btrfs
      - dmi
      - fibrechannel
      - filefd
      - infiniband
      - ipvs
    node_exporter_enabled_collectors: []
  roles:
    - prometheus.prometheus.node_exporter
- name: "Load hidden hostnames"
  hosts:
    - rack11
  tasks:
    - ansible.builtin.include_vars:
        file: dns-vars.yaml
- name: "Install Prometheus blackbox_exporter"
  # Requires host facts?
  hosts:
    - rack11
  vars:
    blackbox_exporter_configuration_modules:
      http_2xx_ipv6:
        prober: http
        http:
          preferred_ip_protocol: ipv6
          ip_protocol_fallback: false
      http_2xx_ipv4:
        prober: http
        http:
          preferred_ip_protocol: ipv4
          ip_protocol_fallback: false
      dns_authv_soa:
        prober: dns
        dns:
          query_name: "{{ dns_primary_domain }}"
          query_type: SOA
          preferred_ip_protocol: ipv4
          ip_protocol_fallback: true
          valid_rcodes:
            - NOERROR
          recursion_desired: false
         #validate_authority_rrs:
         #  fail_if_not_matches_regexp:
         #    - 'NS.*pvm1\..*'
         #validate_additional_rrs:
         #  fail_if_none_matches_regexp:
         #    - 'pvm1.*A.*34.56.231.75'
         #    - 'pvm2.*A.*178.128.134.39'
         #    - 'pvm1.*AAAA.*2600:1900:4000:4b32:0:3::'
         #    - 'pvm2.*AAAA.*2604:a880:400:d1::5365:8001'
      dns_authv_aux_soa:
        prober: dns
        dns:
          query_name: "{{ dns_auxiliary_domain }}"
          query_type: SOA
          preferred_ip_protocol: ipv4
          ip_protocol_fallback: true
          valid_rcodes:
            - NOERROR
          recursion_desired: false
         #validate_authority_rrs:
         #  fail_if_not_matches_regexp:
         #    - 'NS.*pvm1\..*'
         #validate_additional_rrs:
         #  fail_if_none_matches_regexp:
         #    - 'pvm1.*A.*34.56.231.75'
         #    - 'pvm2.*A.*178.128.134.39'
         #    - 'pvm1.*AAAA.*2600:1900:4000:4b32:0:3::'
         #    - 'pvm2.*AAAA.*2604:a880:400:d1::5365:8001'
  roles:
    - prometheus.prometheus.blackbox_exporter
- name: "Install Prometheus IMPI exporter"
  hosts:
    - rack19
  vars:
    ipmi_exporter_version: 1.6.1
    ipmi_exporter_directory: /opt/ipmi_exporter
  tasks:
    - name: "Install FreeIPMI"
      become: true
      ansible.builtin.apt:
        pkg: ["freeipmi", "freeipmi-tools"]
    - name: "Create unarchive target"
      ansible.builtin.file:
        state: directory
        path: "{{ ipmi_exporter_directory }}"
    - name: "Download exporter"
      ansible.builtin.unarchive:
        dest: "{{ ipmi_exporter_directory }}"
        remote_src: true
        src: "https://github.com/prometheus-community/ipmi_exporter/releases/download/v{{ ipmi_exporter_version }}/ipmi_exporter-{{ ipmi_exporter_version }}.linux-amd64.tar.gz"
        # Strip the "package version" portion of the path, so we get stable paths"
        extra_opts: ["--transform", "s!^[^/]\\+/!!"]
    - name: "Install unit definition"
      ansible.builtin.copy:
        src: "ipmi-exporter.service"
        dest: "/etc/systemd/system"
    - name: "Start unit"
      ansible.builtin.systemd:
        daemon_reload: true
        name: "ipmi-exporter"
        enabled: true
        state: restarted
- name: "Configure prometheus servers"
  hosts: rack11
  no_log: false
  vars:
    prometheus_agent_mode: true
    prometheus_static_targets_files:
      - "{{ ansible_facts.hostname }}/targets/*.yml"
      - "{{ ansible_facts.hostname }}/targets/*.yaml"
    # This is a brand-new feature, not yet in the released version
    # of the role. Booo!
#   prometheus_scrape_config_files:
#     - "{{ ansible_facts.hostname }}/scrapes/*.yaml"
    prometheus_remote_write:
      - url: https://prometheus-us-central1.grafana.net/api/prom/push
        basic_auth:
          username: "{{ lookup('file', 'remote-user.vault') }}"
          password: "{{ lookup('file', 'remote-pass.vault') }}"
        write_relabel_configs:
          - action: drop
            source_labels: ["__name__"]
            regex: "^node_scrape.*"
          - action: drop
            source_labels: ["__name__"]
            regex: "^go_.*"
    prometheus_scrape_configs:
      - job_name: "node_exporter"
        scrape_interval: 1m
        file_sd_configs:
          - files:
            - "{{ prometheus_config_dir }}/file_sd/node_exporter.yml"
      - job_name: "ipmi_exporter"
        scrape_interval: 1m
        file_sd_configs:
          - files:
            - "{{ prometheus_config_dir }}/file_sd/ipmi_exporter.yml"
      - job_name: "blackbox"
        scrape_interval: 1m
        # Based on https://gist.github.com/sethryder/b6f50b0e9bd1f3f0fc4e3d002c7f48df
        metrics_path: /probe
        file_sd_configs:
          - files:
            - "{{ prometheus_config_dir }}/file_sd/blackbox-*.yml"
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [module]
            target_label: __param_module
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.
      # With these in place, we wind up with too many metrics to push. Boo.
#     - job_name: "prometheus"
#       metrics_path: "{{ prometheus_metrics_path }}"
#       static_configs:
#         - targets:
##     - job_name: "blackbox_exporter"
#       static_configs:
#         - targets: ["127.0.0.1:9115"]
#          - "{{ ansible_fqdn | default(ansible_host) | default('localhost') }}:9090"
  roles:
    - prometheus.prometheus.prometheus


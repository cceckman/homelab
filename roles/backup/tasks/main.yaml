- name: "Install restic backup program"
  become: true
  ansible.builtin.apt:
    cache_valid_time: 3600
    pkg:
      - restic
  # restic-rest-server is not packaged by Debian:
  # https://mentors.debian.net/package/restic-rest-server/
- name: "Install restic rest-server"
  become: true
  ansible.builtin.unarchive:
    remote_src: true
    src: "https://github.com/restic/rest-server/releases/download/v{{ rest_server_version }}/rest-server_{{ rest_server_version }}_linux_amd64.tar.gz"
    include: "rest-server"
    extra_opts:
      - "--strip-components=1"
      - "--no-overwrite-dir"
    dest: "/usr/bin"
- name: "Prepare restic user"
  become: true
  ansible.builtin.user:
    name: restic
    groups:
      - storage-access
    password: "!"
    password_lock: true
  register: restic_user
- name: "Restrict restic home directory"
  become: true
  ansible.builtin.file:
    path: "{{ restic_user.home }}"
    mode: 0700
- name: "Copy files into Restic home"
  become: true
  with_items:
    - config.env
    - credentials
    - password
  ansible.builtin.copy:
    decrypt: true
    mode: '0400'
    dest: "{{ restic_user.home }}/{{ item }}"
    src: "restic-secrets/{{ item }}.vault"
    owner: restic
- name: "Add unit files"
  become: true
  with_items:
    - restic-bigdata.service
    - restic-bigdata.timer
  ansible.builtin.copy:
    dest: /etc/systemd/system
    src: "restic-units/{{ item }}"
- name: "Enable units"
  become: true
  with_items:
    - restic-bigdata.service
    - restic-bigdata.timer
  ansible.builtin.systemd:
    daemon_reload: true
    name: "{{ item }}"
    enabled: true
- name: "Start timer"
  become: true
  ansible.builtin.systemd:
    daemon_reload: true
    name: restic-bigdata.timer
    state: started

- name: "Capture home directory"
  ansible.builtin.shell: "getent passwd | grep '^{{ ansible_facts['user_id'] | quote }}' | cut -d: -f6"
  register: find_homedir

- name: "Detect existing portablerc"
  ansible.builtin.stat:
    path: "{{ find_homedir.stdout_lines[0] | quote }}/.portablerc.sh"
  register: portablerc
- name: "Deploy default portable rc"
  when: "not (portablerc.stat.exists and not portablerc.stat.islnk)"
  ansible.builtin.copy:
    dest: "{{ find_homedir.stdout_lines[0] | quote }}/.portablerc.sh"
    mode: 0755
    src: Tilde/rcfiles/portablerc.sh
- name: "Use portable rc for bash"
  ansible.builtin.file:
    src: "{{ find_homedir.stdout_lines[0] | quote }}/.portablerc.sh"
    dest: "{{ find_homedir.stdout_lines[0] | quote }}/.bashrc"
    state: link
    mode: 0755
- name: "Use portable rc for zsh"
  when: "ansible_facts['user_id'] == 'cceckman'"
  ansible.builtin.file:
    src: "{{ find_homedir.stdout_lines[0] | quote }}/.portablerc.sh"
    dest: "{{ find_homedir.stdout_lines[0] | quote }}/.zshrc"
    state: link
    mode: 0755

- name: "Detect existing .tmux.conf"
  ansible.builtin.stat:
    path: "{{ find_homedir.stdout_lines[0] | quote }}/.tmux.conf"
  register: tmuxconf
- name: "Deploy default tmux config"
  when: "ansible_facts['user_id'] == 'cceckman' and not tmuxconf.stat.islnk"
  ansible.builtin.copy:
    dest: "{{ find_homedir.stdout_lines[0] | quote }}/.tmux.conf"
    mode: 0644
    src: Tilde/tmux.conf

